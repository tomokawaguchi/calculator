//=======================================
// Mixin
//=======================================

@use "./variables" as *;

// HOVER / FOCUS STATE
@mixin onHoverFocus {
  &:hover,
  &:focus {
    @content;
  }
}

// FLEX
@mixin displayFlex($justify, $align) {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  justify-content: $justify;
  align-items: $align;
}

@mixin flex($value) {
  -webkit-box-flex: $value; /* OLD - iOS 6-, Safari 3.1-6 */
  -moz-box-flex: $value; /* OLD - Firefox 19- */
  -webkit-flex: $value; /* Chrome */
  -ms-flex: $value;
}

// TRANSITION
@mixin transitionEffect {
  transition: all 0.3s ease-in-out;
}

// MEDIA QUERY
@mixin mediaQuery($type, $size) {
  @if $type == "max" {
    @media only screen and (max-width: $size) {
      @content;
    }
  } @else {
    @media only screen and (min-width: $size) {
      @content;
    }
  }
}

// BUTTON STYLING RESET
@mixin resetButtonStyling {
  background-color: transparent;
  border: none;
  font-size: 1.1rem;
  font-weight: 400;
  line-height: 1.8rem;
  color: $body-text;
  outline: none;
  padding: 0;
  cursor: pointer;
}

// CUSTOM ICON
@mixin customIcon {
  font-family: "fontello";
  font-style: normal;
  font-weight: normal;
}
